import{r as u,S as y,M as A,u as S,C as V,a as G,j as s,B as P,b as z,G as B,V as F}from"./index-3528fe2e.js";const J=({scalarTracker:n,nBoxes:o=5,gridSize:f=10,cellSize:r=.25})=>{const m=f,M=f,w=u.useMemo(()=>new y(.65,150,2*250),[250]),c=u.useRef(null),x=u.useMemo(()=>new A,[]),R=S(),g=V.getPalette(R).buildLut(),a=u.useMemo(()=>Array.from({length:o},e=>{const i=Math.floor(m*Math.random()),l=Math.floor(M*Math.random());return{fromRow:i,fromCol:l,toRow:i,toCol:l}}),[o,m,M]);return u.useEffect(()=>{for(let e=0;e<o;e++)c.current.setColorAt(e,g.getColor(e/(o-1)));c.current.instanceColor.needsUpdate=!0},[g,o]),G(()=>{if(w.step((n==null?void 0:n.getNormalizedValue())??0)){const h=Math.floor(Math.random()*3)-1,d=Math.floor(Math.random()*3)-1;for(let t=0;t<o;t++)a[t].fromRow=a[t].toRow,a[t].fromCol=a[t].toCol,a[t].toRow+=(Math.random()>.5?1:-1)*d,a[t].toCol+=(Math.random()>.5?1:-1)*h}const e=Math.min(1,Math.max(0,w.timeSinceLastEventMs/250));let i,l,p,C,j;a.forEach(({fromRow:h,fromCol:d,toRow:t,toCol:D},E)=>{const b=h+e*(t-h),v=d+e*(D-d);i=b/(m-1),l=v/(M-1),p=m*r*(i-.5),C=M*r*(l-.5),j=0,x.setPosition(p,C,j),c.current.setMatrixAt(E,x)}),c.current.instanceMatrix.needsUpdate=!0}),s.jsxs("instancedMesh",{ref:c,castShadow:!0,receiveShadow:!0,args:[new P,new z,o],children:[s.jsx("boxGeometry",{attach:"geometry",args:[r,r,r,1]}),s.jsx("meshBasicMaterial",{attach:"material",color:"white",toneMapped:!1})]})},U=({scalarTracker:n})=>s.jsxs(s.Fragment,{children:[s.jsx(J,{scalarTracker:n??{getNormalizedValue:()=>Math.sin(.0025*Date.now())+1},nBoxes:100,gridSize:100,cellSize:.25}),s.jsx(B,{position:new F(0,0,-.25/2)})]});export{U as default};
